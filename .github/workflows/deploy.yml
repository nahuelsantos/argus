name: Deploy

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with the actual git tag (e.g., v1.0.0)
            type=ref,event=tag
            # Semantic version tags (e.g., 1.0.0, 1.0, 1)
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # SHA-based tags for traceability
            type=sha,prefix=sha-
            # Latest tag for newest release
            type=raw,value=latest
          flavor: |
            # Don't auto-add latest to prevent conflicts
            latest=false

      - name: Show Docker tags that will be created
        run: |
          echo "üè∑Ô∏è  Docker tags that will be created:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/  - /'
          echo ""
          echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "üèóÔ∏è  Version: ${{ github.ref_name }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ github.ref_name }}
            BUILD_TIME=${{ github.event.head_commit.timestamp }}
            GIT_COMMIT=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deployment Summary
        run: |
          echo "üéâ Deployment completed successfully!"
          echo ""
          echo "üì¶ Published images:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/  - /'
          echo ""
          echo "üîó Pull commands:"
          echo "  - docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "  - docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
          echo ""
          echo "‚úÖ Both 'latest' and '${{ github.ref_name }}' tags are now available!" 